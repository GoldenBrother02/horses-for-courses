@using HorsesForCourses.Core
@using HorsesForCourses.Service

@model PagedResult<CoachDTO>

@{
    ViewData["Title"] = "All Coaches";
}

<h1>All Coaches</h1>

<table class="table">
    <thead>
        <tr>
            <th>ID</th>
            <th>Name</th>
            <th>Email</th>
            <th>Competencies</th>
            <th>Edit</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var coach in Model.Items)
        {
            <tr>
                <td>@coach.Id</td>
                <td>@coach.Name</td>
                <td>@coach.Email</td>
                <td>@string.Join(", ", coach.Competencies!)</td>
                <td>
                    <a class="btn btn-primary" asp-controller="Coaches" asp-action="EditMenu"
                        asp-route-id="@coach.Id">Edit</a>
                    <a class="btn btn-primary" asp-controller="Coaches" asp-action="GetById"
                        asp-route-id="@coach.Id">GetByid</a>
                </td>
            </tr>
        }
    </tbody>
</table>

<nav>
    <ul class="pagination">
        @if (Model.HasPrevious)
        {
            <li class="page-item">
                <a class="page-link" asp-action="Index" asp-route-page="@(Model.PageNumber - 1)">
                    <span aria-hidden="true">&laquo;</span> Previous</a>
            </li>
        }
        @for (int i = 1; i <= Model.TotalPages; i++)
        {
            <li class="page-item @(Model.PageNumber == i ? "active" : "")">
                <a class="page-link" asp-action="Index" asp-route-page="@i">@i</a>
            </li>
        }
        @if (Model.HasNext)
        {
            <li class="page-item">
                <a class="page-link" asp-action="Index" asp-route-page="@(Model.PageNumber + 1)">
                    Next <span aria-hidden="true">&raquo;</span></a>
            </li>
        }
    </ul>
</nav>